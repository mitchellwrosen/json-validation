-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Convert to/from the ISO 8601 time format
--   
--   Conversion functions between Haskell time types and the ISO 8601
--   format, which is often used for printing times, e.g. JavaScript's
--   <tt>new Date().toISOString()</tt>.
@package iso8601-time
@version 0.1.4

module Data.Time.ISO8601

-- | Formats a time in ISO 8601, with up to 12 second decimals.
--   
--   This is the <a>formatTime</a> format <tt>%FT%T%Q</tt> ==
--   <tt>%%Y-%m-%dT%%H:%M:%S%Q</tt>.
formatISO8601 :: UTCTime -> String

-- | Formats a time in ISO 8601 with up to millisecond precision and
--   trailing zeros. The format is precisely:
--   
--   <pre>
--   YYYY-MM-DDTHH:mm:ss.sssZ
--   </pre>
formatISO8601Millis :: UTCTime -> String

-- | Formats a time in ISO 8601 with up to microsecond precision and
--   trailing zeros. The format is precisely:
--   
--   <pre>
--   YYYY-MM-DDTHH:mm:ss.ssssssZ
--   </pre>
formatISO8601Micros :: UTCTime -> String

-- | Formats a time in ISO 8601 with up to nanosecond precision and
--   trailing zeros. The format is precisely:
--   
--   <pre>
--   YYYY-MM-DDTHH:mm:ss.sssssssssZ
--   </pre>
formatISO8601Nanos :: UTCTime -> String

-- | Formats a time in ISO 8601 with up to picosecond precision and
--   trailing zeros. The format is precisely:
--   
--   <pre>
--   YYYY-MM-DDTHH:mm:ss.ssssssssssssZ
--   </pre>
formatISO8601Picos :: UTCTime -> String

-- | Formats a time like JavaScript's <tt>new Date().toISOString()</tt> as
--   specified by Mozilla:
--   <a>https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString</a>
--   
--   This is an alias for <a>formatISO8601Millis</a>.
formatISO8601Javascript :: UTCTime -> String

-- | Parses an ISO 8601 string.
--   
--   Leading and trailing whitespace is accepted. See <a>parseTimeM</a>
--   from the <tt>time</tt> package for more details.
parseISO8601 :: String -> Maybe UTCTime
